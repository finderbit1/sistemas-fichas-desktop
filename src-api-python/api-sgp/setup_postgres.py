#!/usr/bin/env python3
"""
Script para configurar o banco PostgreSQL
"""

import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
from config import settings
import sys

def create_database():
    """Cria o banco de dados se n√£o existir"""
    try:
        # Conectar ao PostgreSQL (sem especificar database)
        conn = psycopg2.connect(
            host=settings.POSTGRES_HOST,
            port=settings.POSTGRES_PORT,
            user=settings.POSTGRES_USER,
            password=settings.POSTGRES_PASSWORD
        )
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        
        cursor = conn.cursor()
        
        # Verificar se o banco existe
        cursor.execute(f"SELECT 1 FROM pg_database WHERE datname = '{settings.POSTGRES_DB}'")
        exists = cursor.fetchone()
        
        if not exists:
            print(f"üìä Criando banco de dados '{settings.POSTGRES_DB}'...")
            cursor.execute(f'CREATE DATABASE "{settings.POSTGRES_DB}"')
            print("‚úÖ Banco de dados criado com sucesso!")
        else:
            print(f"‚ÑπÔ∏è  Banco de dados '{settings.POSTGRES_DB}' j√° existe.")
        
        cursor.close()
        conn.close()
        
        return True
        
    except psycopg2.OperationalError as e:
        print(f"‚ùå Erro de conex√£o com PostgreSQL: {e}")
        print("üìã Verifique se:")
        print("   - PostgreSQL est√° rodando")
        print("   - As credenciais est√£o corretas no arquivo .env")
        print("   - O usu√°rio tem permiss√£o para criar bancos")
        return False
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        return False

def test_connection():
    """Testa a conex√£o com o banco"""
    try:
        from database.database import engine
        with engine.connect() as conn:
            result = conn.execute("SELECT 1")
            print("‚úÖ Conex√£o com PostgreSQL testada com sucesso!")
            return True
    except Exception as e:
        print(f"‚ùå Erro ao testar conex√£o: {e}")
        return False

def main():
    print("üêò Configurando PostgreSQL para Sistema de Fichas")
    print("=" * 50)
    
    print(f"üìã Configura√ß√µes:")
    print(f"   Host: {settings.POSTGRES_HOST}")
    print(f"   Porta: {settings.POSTGRES_PORT}")
    print(f"   Usu√°rio: {settings.POSTGRES_USER}")
    print(f"   Banco: {settings.POSTGRES_DB}")
    print()
    
    # Criar banco de dados
    if not create_database():
        sys.exit(1)
    
    # Testar conex√£o
    if not test_connection():
        print("‚ùå Falha no teste de conex√£o!")
        sys.exit(1)
    
    print()
    print("üéâ Setup do PostgreSQL conclu√≠do com sucesso!")
    print("üìã Pr√≥ximos passos:")
    print("   1. Execute: uv run python recreate_tables.py")
    print("   2. Execute: uv run uvicorn main:app --reload")

if __name__ == "__main__":
    main()
